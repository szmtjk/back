<?xml version="1.0" encoding="UTF-8" ?>
<!--  Generate by autoSQLMap Powered by duxing@Taobao -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingyi.logistic.business.db.dao.CustomerTaskDAO">
    <resultMap id="AllColumnMap" type="com.xingyi.logistic.business.db.entity.CustomerTaskDO">
        <result property="id" column="id"/>
        <result property="taskNo" column="taskNo"/>
        <result property="customerId" column="customerId"/>
        <result property="contractId" column="contractId"/>
        <result property="contractNo" column="contractNo"/>
        <result property="contractName" column="contractName"/>
        <result property="selfBuckle" column="selfBuckle"/>
        <result property="totalLoad" column="totalLoad"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updater" column="updater"/>
        <result property="updated" column="updated"/>
    </resultMap>

    <resultMap id="taskDetailColumnMap" type="com.xingyi.logistic.business.db.entity.CustomerTaskDetailDO">
        <result property="taskNo" column="taskNo"/>
        <result property="fullName" column="fullName"/>
        <result property="contractName" column="contractName"/>
        <result property="totalLoad" column="totalLoad"/>
        <result property="flowName" column="flowName"/>
        <result property="goodsName" column="goodsName"/>
        <result property="goodsType" column="goodsType"/>
        <result property="totalWeight" column="totalWeight"/>
        <result property="startPortName" column="startPortName"/>
        <result property="loadDate" column="loadDate"/>
        <result property="endPortName" column="endPortName"/>
        <result property="dischargeDate" column="dischargeDate"/>
        <result property="shipNo" column="shipNo"/>
        <result property="shipFlag" column="shipFlag"/>
        <result property="preWeight" column="preWeight"/>
        <result property="preLoad" column="preLoad"/>
        <result property="actualTransferPrice" column="actualTransferPrice"/>
        <result property="preArriveTime" column="preArriveTime"/>
        <result property="arriveSPortTime" column="arriveSPortTime"/>
        <result property="loadTime" column="loadTime"/>
        <result property="loadWeight" column="loadWeight"/>
        <result property="preArriveEPortTime" column="preArriveEPortTime"/>
        <result property="actualArriveEPortTime" column="actualArriveEPortTime"/>
        <result property="dischargeTime" column="dischargeTime"/>
        <result property="dischargeWeight" column="dischargeWeight"/>
        <result property="dischargeDelayFee" column="dischargeDelayFee"/>
        <result property="allowance" column="allowance"/>
    </resultMap>

    <sql id="all_column">
        `id`
        ,`taskNo`
        ,`customerId`
        ,`contractId`
        ,`selfBuckle`
        ,`totalLoad`
        ,`description`
        ,`creator`
        ,`created`
        ,`updater`
        ,`updated`
    </sql>

    <resultMap id="mRetComboxMap" type="com.xingyi.logistic.business.model.Combox">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
    </resultMap>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO CustomerTask
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.customerId!=null"> `customerId`,</if>
            <if test="pojo.contractId!=null"> `contractId`,</if>
            <if test="pojo.selfBuckle!=null"> `selfBuckle`,</if>
            <if test="pojo.totalLoad!=null"> `totalLoad`,</if>
            <if test="pojo.description!=null"> `description`,</if>
            `taskNo`,
            <if test="pojo.creator!=null"> `creator`,</if>
            <if test="pojo.updater!=null"> `updater`,</if>
            `created`,
            `updated`
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.customerId!=null">#{pojo.customerId},</if>
            <if test="pojo.contractId!=null">#{pojo.contractId},</if>
            <if test="pojo.selfBuckle!=null">#{pojo.selfBuckle},</if>
            <if test="pojo.totalLoad!=null">#{pojo.totalLoad},</if>
            <if test="pojo.description!=null">#{pojo.description},</if>
            CONCAT('CT', round(RAND()*100 + 100), round(RAND()*100 + 100), UNIX_TIMESTAMP(now())),
            <if test="pojo.creator!=null">#{pojo.creator},</if>
            <if test="pojo.updater!=null">#{pojo.updater},</if>
            UNIX_TIMESTAMP(now()),
            UNIX_TIMESTAMP(now())
        </trim>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE CustomerTask
        <set>
            <if test="pojo.customerId!=null">`customerId` = #{pojo.customerId},</if>
            <if test="pojo.contractId!=null">`contractId` = #{pojo.contractId},</if>
            <if test="pojo.selfBuckle!=null">`selfBuckle` = #{pojo.selfBuckle},</if>
            <if test="pojo.totalLoad!=null">`totalLoad` = #{pojo.totalLoad},</if>
            <if test="pojo.description!=null">`description` = #{pojo.description},</if>
            <if test="pojo.updater!=null">`updater` = #{pojo.updater},</if>
            `updated` = UNIX_TIMESTAMP(now())
        </set>
        WHERE `id` = #{pojo.id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <update id="del" parameterType="java.lang.Long">
        UPDATE CustomerTask
        SET `isDeleted` = 1 ,
        `updated` = UNIX_TIMESTAMP(now())
        WHERE `id` = #{id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="AllColumnMap">
        SELECT A1.*, A2.contractNo, A2.`name`
        FROM CustomerTask A1
        LEFT JOIN Contract A2 ON A1.contractId=A2.id
        WHERE A1.`id` = #{id} and A1.`isDeleted` = 0
        LIMIT 1
    </select>

    <select id="getExistCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `CustomerTask`
        where `isDeleted` = 0 AND 1=2 <!--客户下单可以重复-->
        <if test="pojo.id != null"> AND `id` != #{pojo.id} </if>
        <if test="pojo.customerId != null"> AND `customerId` = #{pojo.customerId} </if>
        <if test="pojo.contractId != null"> AND `contractId` = #{pojo.contractId} </if>
        limit 1
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(A1.id)
        FROM CustomerTask A1
        LEFT JOIN Contract A2 ON A1.contractId=A2.id
        <include refid="pageQueryWhereCommon"/>
        limit 1
    </select>

    <select id="queryByPage" resultMap="AllColumnMap" parameterType="Map">
        SELECT A1.*, A2.contractNo, A2.`name` contractName
        FROM CustomerTask A1
        LEFT JOIN Contract A2 ON A1.contractId=A2.id
        <include refid="pageQueryWhereCommon"/>
        order by A1.`id` desc
        <include refid="pageCommon"/>
    </select>

    <sql id="pageQueryWhereCommon">
        where A1.`isDeleted` = 0
        <if test="pojo.id != null"> AND A1.`id` = #{pojo.id} </if>
        <if test="pojo.key != null">
            AND (
                    A1.`taskNo` like concat('%', #{pojo.key}, '%')
                OR  A2.`contractNo` like concat('%', #{pojo.key}, '%')
                OR  A2.`name` like concat('%', #{pojo.key}, '%')
                )
        </if>
    </sql>

    <sql id="pageCommon">
        <choose>
            <when test="pojo.startRow != null and pojo.startRow gt -1 and pojo.limitNum != null and pojo.limitNum gt 0">
                limit #{pojo.startRow}, #{pojo.limitNum}
            </when>
            <otherwise>
                limit 100
            </otherwise>
        </choose>
    </sql>

    <select id="queryComboxCustomerInfo" resultMap="mRetComboxMap" parameterType="Map">
        select id AS ID, name AS NAME
        from `Contract` where ( `isDeleted` = 0
        <if test="pojo.key != null">
            <![CDATA[
            AND validSDate <= NOW()
            AND validEDate >= NOW()
            ]]>
        </if>
        )
        <if test="pojo.id != null">
            OR id = #{pojo.id}
        </if>
        ORDER BY created DESC
    </select>

    <select id="loadContractById" resultMap="mRetComboxMap" parameterType="Map">
        select a.partyA AS ID, b.fullName AS NAME
        from `Contract` a, `Customer` b
         WHERE  a.partyA = b.id
        <if test="pojo.key != null"> AND a.id = #{pojo.key} </if>
    </select>

    <select id="loadContractFlowByContractId" resultMap="mRetComboxMap" parameterType="Map">
        select a.flowId AS ID, b.name AS NAME
        from `ContractFlow` a, `Flow` b
        WHERE  a.flowId = b.id
        <if test="pojo.key != null"> AND a.contractId = #{pojo.key} </if>
        <if test="pojo.customerId != null"> AND a.flowId not in ( SELECT flowId from CustomerTaskFlow WHERE taskId = #{pojo.customerId} ) </if>
    </select>

    <select id="getTaskDetailCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1)
        from CustomerTask a
        left join CustomerTaskFlow b on b.taskId=a.id
        left join DispatchInfo c on c.customerTaskFlowId=b.id
        left join SailingInfo d on d.orderId=c.id
        left join Customer e on e.id=a.customerId
        left join Contract f on f.id=a.contractId
        left join Flow g on g.id=b.flowId
        left join Port h on h.id=b.startPortId
        left join Port i on i.id=b.endPortId
        left join Ship j on j.id=c.shipId
        where a.isDeleted = 0
        <if test="key != null">
            and a.taskNo like concat('%', #{key}, '%')
        </if>
    </select>

    <select id="getTaskDetailByPage" parameterType="Map" resultMap="taskDetailColumnMap">
        select a.taskStatus, a.taskNo, e.fullName, f.`name` as contractName, a.totalLoad, g.`name` as flowName, b.goodsName, b.goodsType,
            b.totalWeight, h.name as startPortName, i.`name` as endPortName, b.loadingTime as loadDate,
            b.dischargeTime as dischargeDate, j.shipNo, j.shipFlag, c.preWeight, c.preLoad, c.actualTransferPrice,
            c.preArriveTime, d.arriveSPortTime, d.loadTime, d.loadWeight, d.preArriveEPortTime, d.actualArriveEPortTime,
            d.dischargeTime, d.dischargeWeight, d.dischargeDelayFee, d.allowance
        from CustomerTask a
        left join CustomerTaskFlow b on b.taskId=a.id
        left join DispatchInfo c on c.customerTaskFlowId=b.id
        left join SailingInfo d on d.orderId=c.id
        left join Customer e on e.id=a.customerId
        left join Contract f on f.id=a.contractId
        left join Flow g on g.id=b.flowId
        left join Port h on h.id=b.startPortId
        left join Port i on i.id=b.endPortId
        left join Ship j on j.id=c.shipId
        where a.isDeleted = 0
        <if test="pojo.key != null">
            and a.taskNo like concat('%', #{pojo.key}, '%')
        </if>
        order by a.id, b.id, c.id, d.id
        <include refid="pageCommon"/>
    </select>

    <update id="updateCustomerTaskStatus">
        update CustomerTask aa
        left join (SELECT taskId, min(taskStatus) as minStatus, max(taskStatus) as maxStatus
        from CustomerTaskFlow
        group by taskId
        ) bb on bb.taskId=aa.id
        set taskStatus=(case
        when maxStatus == 0 then 0
        when maxStatus == 5 and minStatus == 5 then 2
        else 1
        end)
        where aa.id = #{taskId}
    </update>
</mapper>
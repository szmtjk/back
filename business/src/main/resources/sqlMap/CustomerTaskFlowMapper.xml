<?xml version="1.0" encoding="UTF-8" ?>
<!--  Generate by autoSQLMap Powered by duxing@Taobao -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingyi.logistic.business.db.dao.CustomerTaskFlowDAO">
    <resultMap id="AllColumnMap" type="com.xingyi.logistic.business.db.entity.CustomerTaskFlowDO">
        <result property="id" column="id"/>
        <result property="customerName" column="customerName"/>
        <result property="taskId" column="taskId"/>
        <result property="taskNo" column="taskNo"/>
        <result property="flowId" column="flowId"/>
        <result property="goodsName" column="goodsName"/>
        <result property="goodsType" column="goodsType"/>
        <result property="goodsSubType" column="goodsSubType"/>
        <result property="totalWeight" column="totalWeight"/>
        <result property="direction" column="direction"/>
        <result property="sender" column="sender"/>
        <result property="receiver" column="receiver"/>
        <result property="loadingTime" column="loadingTime"/>
        <result property="dischargeTime" column="dischargeTime"/>
        <result property="startPortId" column="startPortId"/>
        <result property="endPortId" column="endPortId"/>
        <result property="loadType" column="loadType"/>
        <result property="bigShipPC" column="bigShipPC"/>
        <result property="totalLoad" column="totalLoad"/>
        <result property="arriveLocation" column="arriveLocation"/>
        <result property="bigShipArriveTime" column="bigShipArriveTime"/>
        <result property="bigShipDepartTime" column="bigShipDepartTime"/>
        <result property="selfPick" column="selfPick"/>
        <result property="selfBuckle" column="selfBuckle"/>
        <result property="sailingArea" column="sailingArea"/>
        <result property="shipSuggestUnitPrice" column="shipSuggestUnitPrice"/>
        <result property="sailingFlag" column="sailingFlag"/>
        <result property="status" column="status"/>
        <result property="taskStatus" column="taskStatus"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
    </resultMap>

    <sql id="all_column">
        a.`id`
        ,c.`fullName` as `customerName`
        ,a.`taskId`
        ,a.`taskNo`
        ,a.`flowId`
        ,a.`goodsName`
        ,a.`goodsType`
        ,a.`goodsSubType`
        ,a.`totalWeight`
        ,a.`direction`
        ,a.`sender`
        ,a.`receiver`
        ,a.`loadingTime`
        ,a.`dischargeTime`
        ,a.`startPortId`
        ,a.`endPortId`
        ,a.`loadType`
        ,a.`bigShipPC`
        ,a.`totalLoad`
        ,a.`arriveLocation`
        ,a.`bigShipArriveTime`
        ,a.`bigShipDepartTime`
        ,a.`selfPick`
        ,a.`selfBuckle`
        ,a.`sailingArea`
        ,a.`shipSuggestUnitPrice`
        ,a.`sailingFlag`
        ,a.`status`
        ,a.`taskStatus`
        ,a.`description`
        ,a.`creator`
        ,a.`created`
        ,a.`updated`
    </sql>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO CustomerTaskFlow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.taskId!=null"> `taskId`,</if>
            <if test="pojo.flowId!=null"> `flowId`,</if>
            <!--<if test="pojo.taskNo!=null"> `taskNo`,</if>-->
            <if test="pojo.goodsName!=null"> `goodsName`,</if>
            <if test="pojo.goodsType!=null"> `goodsType`,</if>
            <if test="pojo.goodsSubType!=null"> `goodsSubType`,</if>
            <if test="pojo.totalWeight!=null"> `totalWeight`,</if>
            <if test="pojo.direction!=null"> `direction`,</if>
            <if test="pojo.sender!=null"> `sender`,</if>
            <if test="pojo.receiver!=null"> `receiver`,</if>
            <if test="pojo.loadingTime!=null"> `loadingTime`,</if>
            <if test="pojo.dischargeTime!=null"> `dischargeTime`,</if>
            <if test="pojo.startPortId!=null"> `startPortId`,</if>
            <if test="pojo.endPortId!=null"> `endPortId`,</if>
            <if test="pojo.loadType!=null"> `loadType`,</if>
            <if test="pojo.bigShipPC!=null"> `bigShipPC`,</if>
            <if test="pojo.totalLoad!=null"> `totalLoad`,</if>
            <if test="pojo.arriveLocation!=null"> `arriveLocation`,</if>
            <if test="pojo.bigShipArriveTime!=null"> `bigShipArriveTime`,</if>
            <if test="pojo.bigShipDepartTime!=null"> `bigShipDepartTime`,</if>
            <if test="pojo.selfPick!=null"> `selfPick`,</if>
            <if test="pojo.selfBuckle!=null"> `selfBuckle`,</if>
            <if test="pojo.sailingArea!=null"> `sailingArea`,</if>
            <if test="pojo.shipSuggestUnitPrice!=null and pojo.shipSuggestUnitPrice!=''"> `shipSuggestUnitPrice`,</if>
            <if test="pojo.sailingFlag!=null"> `sailingFlag`,</if>
            <if test="pojo.status!=null"> `status`,</if>
            <if test="pojo.taskStatus!=null"> `taskStatus`,</if>
            <if test="pojo.description!=null"> `description`,</if>
            `taskNo`,
            `created`,
            `updated`
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.taskId!=null">#{pojo.taskId},</if>
            <if test="pojo.flowId!=null">#{pojo.flowId},</if>
            <!--<if test="pojo.taskNo!=null">#{pojo.taskNo},</if>-->
            <if test="pojo.goodsName!=null">#{pojo.goodsName},</if>
            <if test="pojo.goodsType!=null">#{pojo.goodsType},</if>
            <if test="pojo.goodsSubType!=null">#{pojo.goodsSubType},</if>
            <if test="pojo.totalWeight!=null">#{pojo.totalWeight},</if>
            <if test="pojo.direction!=null">#{pojo.direction},</if>
            <if test="pojo.sender!=null">#{pojo.sender},</if>
            <if test="pojo.receiver!=null">#{pojo.receiver},</if>
            <if test="pojo.loadingTime!=null">#{pojo.loadingTime},</if>
            <if test="pojo.dischargeTime!=null">#{pojo.dischargeTime},</if>
            <if test="pojo.startPortId!=null">#{pojo.startPortId},</if>
            <if test="pojo.endPortId!=null">#{pojo.endPortId},</if>
            <if test="pojo.loadType!=null">#{pojo.loadType},</if>
            <if test="pojo.bigShipPC!=null">#{pojo.bigShipPC},</if>
            <if test="pojo.totalLoad!=null">#{pojo.totalLoad},</if>
            <if test="pojo.arriveLocation!=null">#{pojo.arriveLocation},</if>
            <if test="pojo.bigShipArriveTime!=null">#{pojo.bigShipArriveTime},</if>
            <if test="pojo.bigShipDepartTime!=null">#{pojo.bigShipDepartTime},</if>
            <if test="pojo.selfPick!=null">#{pojo.selfPick},</if>
            <if test="pojo.selfBuckle!=null">#{pojo.selfBuckle},</if>
            <if test="pojo.sailingArea!=null">#{pojo.sailingArea},</if>
            <if test="pojo.shipSuggestUnitPrice!=null and pojo.shipSuggestUnitPrice!=''">#{pojo.shipSuggestUnitPrice},</if>
            <if test="pojo.sailingFlag!=null">#{pojo.sailingFlag},</if>
            <if test="pojo.status!=null">#{pojo.status},</if>
            <if test="pojo.taskStatus!=null">#{pojo.taskStatus},</if>
            <if test="pojo.description!=null">#{pojo.description},</if>
            CONCAT('CTF', round(RAND()*100 + 100), round(RAND()*100 + 100), UNIX_TIMESTAMP(now())),
            UNIX_TIMESTAMP(now()),
            UNIX_TIMESTAMP(now())
        </trim>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE CustomerTaskFlow
        <set>
            <if test="pojo.taskId!=null">`taskId` = #{pojo.taskId},</if>
            <if test="pojo.flowId!=null">`flowId` = #{pojo.flowId},</if>
            <!--<if test="pojo.taskNo!=null">`taskNo` = #{pojo.taskNo},</if>-->
            <if test="pojo.goodsName!=null">`goodsName` = #{pojo.goodsName},</if>
            <if test="pojo.goodsType!=null">`goodsType` = #{pojo.goodsType},</if>
            <if test="pojo.goodsSubType!=null">`goodsSubType` = #{pojo.goodsSubType},</if>
            <if test="pojo.totalWeight!=null">`totalWeight` = #{pojo.totalWeight},</if>
            <if test="pojo.direction!=null">`direction` = #{pojo.direction},</if>
            <if test="pojo.sender!=null">`sender` = #{pojo.sender},</if>
            <if test="pojo.receiver!=null">`receiver` = #{pojo.receiver},</if>
            <if test="pojo.loadingTime!=null">`loadingTime` = #{pojo.loadingTime},</if>
            <if test="pojo.dischargeTime!=null">`dischargeTime` = #{pojo.dischargeTime},</if>
            <if test="pojo.startPortId!=null">`startPortId` = #{pojo.startPortId},</if>
            <if test="pojo.endPortId!=null">`endPortId` = #{pojo.endPortId},</if>
            <if test="pojo.loadType!=null">`loadType` = #{pojo.loadType},</if>
            <if test="pojo.bigShipPC!=null">`bigShipPC` = #{pojo.bigShipPC},</if>
            <if test="pojo.totalLoad!=null">`totalLoad` = #{pojo.totalLoad},</if>
            <if test="pojo.arriveLocation!=null">`arriveLocation` = #{pojo.arriveLocation},</if>
            <if test="pojo.bigShipArriveTime!=null">`bigShipArriveTime` = #{pojo.bigShipArriveTime},</if>
            <if test="pojo.bigShipDepartTime!=null">`bigShipDepartTime` = #{pojo.bigShipDepartTime},</if>
            <if test="pojo.selfPick!=null">`selfPick` = #{pojo.selfPick},</if>
            <if test="pojo.selfBuckle!=null">`selfBuckle` = #{pojo.selfBuckle},</if>
            <if test="pojo.sailingArea!=null">`sailingArea` = #{pojo.sailingArea},</if>
            <if test="pojo.shipSuggestUnitPrice!=null  and pojo.shipSuggestUnitPrice!=''">`shipSuggestUnitPrice` = #{pojo.shipSuggestUnitPrice},</if>
            <if test="pojo.sailingFlag!=null">`sailingFlag` = #{pojo.sailingFlag},</if>
            <if test="pojo.status!=null">`status` = #{pojo.status},</if>
            <if test="pojo.taskStatus!=null">`taskStatus` = #{pojo.taskStatus},</if>
            <if test="pojo.description!=null">`description` = #{pojo.description},</if>
            `updated` = UNIX_TIMESTAMP(now())
        </set>
        WHERE `id` = #{pojo.id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <update id="del" parameterType="java.lang.Long">
        UPDATE CustomerTaskFlow
        SET `isDeleted` = 1 ,
        `updated` = UNIX_TIMESTAMP(now())
        WHERE `id` = #{id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="AllColumnMap">
        SELECT <include refid="all_column"/>
        FROM `CustomerTaskFlow` a
        LEFT JOIN `CustomerTask` b on b.id = a.taskId
        LEFT JOIN `Customer` c on c.id = b.customerId
        WHERE a.`id` = #{id} and a.`isDeleted` = 0
        LIMIT 1
    </select>

    <select id="queryTotalWeightInfo" parameterType="Map" resultType="java.lang.Long">
        SELECT IFNULL(SUM(A1.totalWeight),0)
        FROM CustomerTaskFlow A1
        WHERE taskId = #{pojo.taskId}
        AND isDeleted = 0
        LIMIT 1
    </select>

    <select id="getExistCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `CustomerTaskFlow`
        where `isDeleted` = 0
        <if test="pojo.id != null"> AND `id` != #{pojo.id} </if>
        <if test="pojo.taskId != null"> AND `taskId` = #{pojo.taskId} </if>
        <if test="pojo.flowId != null"> AND `flowId` = #{pojo.flowId} </if>
        <if test="pojo.goodsType != null"> AND `goodsType` = #{pojo.goodsType} </if>
        <if test="pojo.goodsName != null"> AND `goodsName` = #{pojo.goodsName} </if>
        limit 1
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `CustomerTaskFlow` a
        <include refid="pageQueryWhereCommon"/>
        limit 1
    </select>

    <select id="queryByPage" resultMap="AllColumnMap" parameterType="Map">
        select <include refid="all_column"/>
        from `CustomerTaskFlow` a
        LEFT JOIN `CustomerTask` b on b.id = a.taskId
        LEFT JOIN `Customer` c on c.id = b.customerId
        <include refid="pageQueryWhereCommon"/>
        order by `id` desc
        <include refid="pageCommon"/>
    </select>

    <sql id="pageQueryWhereCommon">
        where a.`isDeleted` = 0
        <if test="pojo.id != null"> AND a.`id` = #{pojo.id} </if>
        <if test="pojo.key != null">
            AND (a.`taskId` like concat('%', #{pojo.key}, '%'))
        </if>
    </sql>

    <sql id="pageCommon">
        <choose>
            <when test="pojo.startRow != null and pojo.startRow gt -1 and pojo.limitNum != null and pojo.limitNum gt 0">
                limit #{pojo.startRow}, #{pojo.limitNum}
            </when>
            <otherwise>
                limit 100
            </otherwise>
        </choose>
    </sql>

    <update id="updateCustomerTaskStatus4Sailing">
        update CustomerTaskFlow aa
        inner join (SELECT customerTaskFlowId as id, min(status) as minStatus, max(status) as maxStatus
                    from DispatchInfo
                    group by customerTaskFlowId
                    ) bb on bb.id=aa.id
        set taskStatus=(case
                            when maxStatus &lt;=3 then 3
                            when maxStatus &lt;=5 then 4
                            when maxStatus == 6 and minStatus == 6 then 5
                            else maxStatus
                        end)
        where aa.id = #{customerTaskFlowId} and aa.taskStatus &gt; 2
    </update>

    <resultMap id="mRetComboxMap" type="com.xingyi.logistic.business.model.Combox">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
    </resultMap>

    <select id="queryUnitPriceInfo" resultMap="mRetComboxMap" parameterType="Map">
        SELECT A1.unitPrice AS ID, A1.unitPrice AS NAME
        FROM TransferFlowPrice A1
        INNER JOIN TransferPrice A2 ON A1.transferPriceId=A2.id
        WHERE A1.flowId = #{pojo.flowId}
        AND A2.customerId = #{pojo.customerId}
        AND A2.contractId = #{pojo.contractId}
        AND A1.startDate <![CDATA[<=]]> from_unixtime(#{pojo.loadingTime})
        AND A1.endDate <![CDATA[ >=   ]]> from_unixtime(#{pojo.loadingTime})
        ORDER BY A1.created DESC
        LIMIT 1
    </select>

</mapper>
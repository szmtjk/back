<?xml version="1.0" encoding="UTF-8" ?>
<!--  Generate by autoSQLMap Powered by duxing@Taobao -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingyi.logistic.authentication.db.dao.OAuthDAO">
    <resultMap id="AllColumnMap" type="com.xingyi.logistic.authentication.db.entity.OAuthDO">
        <result property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="oauthName" column="oauthName"/>
        <result property="oauthId" column="oauthId"/>
        <result property="accessToken" column="accessToken"/>
        <result property="oauthExpires" column="oauthExpires"/>
        <result property="creator" column="creator"/>
        <result property="creatorName" column="creatorName"/>
        <result property="created" column="created"/>
        <result property="updater" column="updater"/>
        <result property="updaterName" column="updaterName"/>
        <result property="updated" column="updated"/>
        <result property="isDeleted" column="isDeleted"/>
    </resultMap>

    <sql id="all_column">
        `id`
        ,`userId`
        ,`oauthName`
        ,`oauthId`
        ,`accessToken`
        ,`oauthExpires`
        ,`creator`
        ,`creatorName`
        ,`created`
        ,`updater`
        ,`updaterName`
        ,`updated`
        ,`isDeleted`
    </sql>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO OAuth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.userId!=null"> `userId`,</if>
            <if test="pojo.oauthName!=null"> `oauthName`,</if>
            <if test="pojo.oauthId!=null"> `oauthId`,</if>
            <if test="pojo.accessToken!=null"> `accessToken`,</if>
            <if test="pojo.oauthExpires!=null"> `oauthExpires`,</if>
            <if test="pojo.creator!=null"> `creator`,</if>
            <if test="pojo.creatorName!=null"> `creatorName`,</if>
            `created`,
            `updated`,
            `isDeleted`
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.userId!=null">#{pojo.userId},</if>
            <if test="pojo.oauthName!=null">#{pojo.oauthName},</if>
            <if test="pojo.oauthId!=null">#{pojo.oauthId},</if>
            <if test="pojo.accessToken!=null">#{pojo.accessToken},</if>
            <if test="pojo.oauthExpires!=null">#{pojo.oauthExpires},</if>
            <if test="pojo.creatorName!=null">#{pojo.creatorName},</if>
            UNIX_TIMESTAMP(now()),
            UNIX_TIMESTAMP(now()),
            0
        </trim>
    </insert>

    <update id="update">
        UPDATE OAuth
        <set>
            <if test="pojo.userId!=null">`userId` = #{pojo.userId},</if>
            <if test="pojo.oauthName!=null">`oauthName` = #{pojo.oauthName},</if>
            <if test="pojo.oauthId!=null">`oauthId` = #{pojo.oauthId},</if>
            <if test="pojo.accessToken!=null">`accessToken` = #{pojo.accessToken},</if>
            <if test="pojo.oauthExpires!=null">`oauthExpires` = #{pojo.oauthExpires},</if>
            <if test="pojo.updaterName!=null">`updaterName` = #{pojo.updaterName},</if>
            <if test="pojo.isDeleted!=null">`isDeleted` = #{pojo.isDeleted},</if>
            `updated` = UNIX_TIMESTAMP(now())
        </set>
        WHERE `id` = #{pojo.id}
    </update>

    <update id="del" parameterType="java.lang.Long">
        UPDATE OAuth
        SET `isDeleted` = 1,
        `updated` = UNIX_TIMESTAMP(now())
        WHERE `id` = #{id}
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="AllColumnMap">
        SELECT <include refid="all_column"/>
        FROM `OAuth`
        WHERE `id` = #{id}
    </select>

    <select id="getExistCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `OAuth`
        where `isDeleted` = 0
        <if test="pojo.id != null"> AND `id` != #{pojo.id} </if>
        <if test="pojo.oauthName != null"> AND `oauthName` = #{pojo.oauthName} </if>
        limit 1
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `OAuth`
        <include refid="pageQueryWhereCommon"/>
        limit 1
    </select>

    <select id="queryByPage" resultMap="AllColumnMap" parameterType="Map">
        select <include refid="all_column"/>
        from `OAuth`
        <include refid="pageQueryWhereCommon"/>
        order by `id` desc
        <include refid="pageCommon"/>
    </select>

    <sql id="pageQueryWhereCommon">
        where `isDeleted` = 0
        <if test="pojo.id != null"> AND `id` = #{pojo.id} </if>
        <if test="pojo.key != null">
            AND (`oauthName` like concat('%', #{pojo.key}, '%'))
        </if>
    </sql>

    <sql id="pageCommon">
        <choose>
            <when test="pojo.startRow != null and pojo.startRow gt -1 and pojo.limitNum != null and pojo.limitNum gt 0">
                limit #{pojo.startRow}, #{pojo.limitNum}
            </when>
            <otherwise>
                limit 100
            </otherwise>
        </choose>
    </sql>

</mapper>
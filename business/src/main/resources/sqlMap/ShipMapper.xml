<?xml version="1.0" encoding="UTF-8" ?>
<!--  Generate by autoSQLMap Powered by duxing@Taobao -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingyi.logistic.business.db.dao.ShipDAO">
    <resultMap id="AllColumnMap" type="com.xingyi.logistic.business.db.entity.ShipDO">
        <result property="id" column="id"/>
        <result property="shipNo" column="shipNo"/>
        <result property="shipFlag" column="shipFlag"/>
        <result property="shipType" column="shipType"/>
        <result property="shipLevel" column="shipLevel"/>
        <result property="length" column="length"/>
        <result property="width" column="width"/>
        <result property="depth" column="depth"/>
        <result property="totalWeight" column="totalWeight"/>
        <result property="netWeight" column="netWeight"/>
        <result property="loadWeight" column="loadWeight"/>
       <!-- <result property="feeWeight" column="feeWeight"/>-->
        <result property="levelAWeight" column="levelAWeight"/>
        <result property="levelBWeight" column="levelBWeight"/>
        <result property="levelCWeight" column="levelCWeight"/>
        <result property="buildDate" column="buildDate"/>
        <result property="customerId" column="customerId"/>
        <result property="checkRegisterNo" column="checkRegisterNo"/>
        <!--<result property="checkNo" column="checkNo"/>-->
        <result property="shipID" column="shipID"/>
        <result property="sailingArea" column="sailingArea"/>
        <result property="sailingAreaA" column="sailingAreaA"/>
        <result property="sailingAreaB" column="sailingAreaB"/>
        <result property="sailingAreaC" column="sailingAreaC"/>
        <result property="firstRegisterNo" column="firstRegisterNo"/>
        <!--<result property="sailingDepth" column="sailingDepth"/>-->
        <result property="buildFactory" column="buildFactory"/>
        <result property="aisID" column="aisID"/>
        <result property="gpsDeviceId" column="gpsDeviceId"/>
        <result property="oldShipName" column="oldShipName"/>
        <result property="runType" column="runType"/>
        <result property="rebuildDate" column="rebuildDate"/>
        <!--<result property="insuranceDate" column="insuranceDate"/>-->
        <result property="checkDate" column="checkDate"/>
        <result property="repairDate" column="repairDate"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
        <result property="name" column="name"/>
        <result property="mobile" column="mobile"/>
        <result property="preLoad" column="preLoad"/>
        <result property="identity" column="identity"/>
        <result property="bankCardNo" column="bankCardNo"/>
        <result property="bankName" column="bankName"/>
        <result property="idPhoto" column="idPhoto"/>
        <result property="idPhotoF" column="idPhotoF"/>
        <result property="bankCardPhoto" column="bankCardPhoto"/>
        <result property="shipPhoto" column="shipPhoto"/>
        <result property="from" column="from"/>
        <result property="status" column="status"/>
        <result property="fitStatus" column="fitStatus"/>
        <result property="noFitCause" column="noFitCause"/>
    </resultMap>

    <resultMap id="ShipWithStaffColumnMap" type="com.xingyi.logistic.business.db.entity.ShipWithStaffDO">
        <result property="id" column="id"/>
        <result property="shipNo" column="shipNo"/>
        <result property="shipFlag" column="shipFlag"/>
        <result property="shipType" column="shipType"/>
        <result property="shipLevel" column="shipLevel"/>
        <result property="length" column="length"/>
        <result property="width" column="width"/>
        <result property="depth" column="depth"/>
        <result property="totalWeight" column="totalWeight"/>
        <result property="netWeight" column="netWeight"/>
        <result property="loadWeight" column="loadWeight"/>
       <!-- <result property="feeWeight" column="feeWeight"/>-->
        <result property="levelAWeight" column="levelAWeight"/>
        <result property="levelBWeight" column="levelBWeight"/>
        <result property="levelCWeight" column="levelCWeight"/>
        <result property="buildDate" column="buildDate"/>
        <result property="customerId" column="customerId"/>
        <result property="checkRegisterNo" column="checkRegisterNo"/>
        <!--<result property="checkNo" column="checkNo"/>-->
        <result property="shipID" column="shipID"/>
        <result property="sailingArea" column="sailingArea"/>
        <result property="sailingAreaA" column="sailingAreaA"/>
        <result property="sailingAreaB" column="sailingAreaB"/>
        <result property="sailingAreaC" column="sailingAreaC"/>
        <result property="firstRegisterNo" column="firstRegisterNo"/>
        <!--<result property="sailingDepth" column="sailingDepth"/>-->
        <result property="buildFactory" column="buildFactory"/>
        <result property="aisID" column="aisID"/>
        <result property="gpsDeviceId" column="gpsDeviceId"/>
        <result property="oldShipName" column="oldShipName"/>
        <result property="runType" column="runType"/>
        <result property="rebuildDate" column="rebuildDate"/>
        <!--<result property="insuranceDate" column="insuranceDate"/>-->
        <result property="checkDate" column="checkDate"/>
        <result property="repairDate" column="repairDate"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
        <result property="captain" column="captain"/>
        <result property="name" column="name"/>
        <result property="combineMobile" column="combineMobile"/>
    </resultMap>


    <resultMap id="mRetShipMap" type="com.xingyi.logistic.business.db.entity.ShipDO">
        <result property="id" column="id"/>
        <result property="shipNo" column="shipNo"/>
        <result property="shipFlag" column="shipFlag"/>
        <result property="shipType" column="shipType"/>
        <result property="shipLevel" column="shipLevel"/>
        <result property="length" column="length"/>
        <result property="width" column="width"/>
        <result property="depth" column="depth"/>
        <result property="totalWeight" column="totalWeight"/>
        <result property="netWeight" column="netWeight"/>
        <result property="loadWeight" column="loadWeight"/>
       <!-- <result property="feeWeight" column="feeWeight"/>-->
        <result property="levelAWeight" column="levelAWeight"/>
        <result property="levelBWeight" column="levelBWeight"/>
        <result property="levelCWeight" column="levelCWeight"/>
        <result property="buildDate" column="buildDate"/>
        <result property="customerId" column="customerId"/>
        <result property="checkRegisterNo" column="checkRegisterNo"/>
        <!--<result property="checkNo" column="checkNo"/>-->
        <result property="shipID" column="shipID"/>
        <result property="sailingArea" column="sailingArea"/>
        <result property="sailingAreaA" column="sailingAreaA"/>
        <result property="sailingAreaB" column="sailingAreaB"/>
        <result property="sailingAreaC" column="sailingAreaC"/>
        <result property="firstRegisterNo" column="firstRegisterNo"/>
        <!--<result property="sailingDepth" column="sailingDepth"/>-->
        <result property="buildFactory" column="buildFactory"/>
        <result property="aisID" column="aisID"/>
        <result property="gpsDeviceId" column="gpsDeviceId"/>
        <result property="oldShipName" column="oldShipName"/>
        <result property="runType" column="runType"/>
        <result property="rebuildDate" column="rebuildDate"/>
        <!--<result property="insuranceDate" column="insuranceDate"/>-->
        <result property="checkDate" column="checkDate"/>
        <result property="repairDate" column="repairDate"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
        <result property="name" column="name"/>
        <result property="mobile" column="mobile"/>
        <result property="preLoad" column="preLoad"/>
        <result property="identity" column="identity"/>
        <result property="bankCardNo" column="bankCardNo"/>
        <result property="bankName" column="bankName"/>
        <result property="idPhoto" column="idPhoto"/>
        <result property="idPhotoF" column="idPhotoF"/>
        <result property="bankCardPhoto" column="bankCardPhoto"/>
        <result property="shipPhoto" column="shipPhoto"/>
        <result property="from" column="from"/>
        <result property="status" column="status"/>
        <result property="fitStatus" column="fitStatus"/>
        <result property="noFitCause" column="noFitCause"/>
    </resultMap>

    <sql id="all_column">
        a.`id`
        ,a.`shipNo`
        ,a.`shipFlag`
        ,a.`shipType`
        ,a.`shipLevel`
        ,a.`length`
        ,a.`width`
        ,a.`depth`
        ,a.`totalWeight`
        ,a.`netWeight`
        ,a.`loadWeight`
       <!-- ,a.`feeWeight`-->
        ,a.`levelAWeight`
        ,a.`levelBWeight`
        ,a.`levelCWeight`
        ,a.`buildDate`
        ,a.`customerId`
        ,a.`checkRegisterNo`
       <!-- ,a.`checkNo`-->
        ,a.`shipID`
        ,a.`sailingArea`
        ,a.`sailingAreaA`
        ,a.`sailingAreaB`
        ,a.`sailingAreaC`
        ,a.`firstRegisterNo`
        <!--,a.`sailingDepth`-->
        ,a.`buildFactory`
        ,a.`aisID`
        ,a.`gpsDeviceId`
        ,a.`oldShipName`
        ,a.`runType`
        ,a.`rebuildDate`
        <!--,a.`insuranceDate`-->
        ,a.`checkDate`
        ,a.`repairDate`
        ,a.`description`
        ,a.`creator`
        ,a.`created`
        ,a.`updater`
        ,a.`updated`
        ,a.`name`
        ,a.`mobile`
        ,a.`preLoad`
        ,a.`identity`
        ,a.`bankCardNo`
        ,a.`bankName`
        ,a.`idPhoto`
        ,a.`idPhotoF`
        ,a.`bankCardPhoto`
        ,a.`shipPhoto`
        ,a.`from`
        ,a.`status`
        ,a.`fitStatus`
        ,a.`noFitCause`
    </sql>
    <sql id="all_column_user">
        <include refid="all_column"/>
        ,b.`realName` as creatorName
    </sql>
    <sql id="all_column_staff">
        <include refid="all_column"/>
        ,IFNULL(b.`name`,a.name) as captain
        ,IFNULL(b.`mobile`,a.name) as combineMobile
    </sql>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO Ship
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.shipNo!=null"> `shipNo`,</if>
            <if test="pojo.shipFlag!=null"> `shipFlag`,</if>
            <if test="pojo.shipType!=null"> `shipType`,</if>
            <if test="pojo.shipLevel!=null"> `shipLevel`,</if>
            <if test="pojo.length!=null"> `length`,</if>
            <if test="pojo.width!=null"> `width`,</if>
            <if test="pojo.depth!=null"> `depth`,</if>
            <if test="pojo.totalWeight!=null"> `totalWeight`,</if>
            <if test="pojo.netWeight!=null"> `netWeight`,</if>
            <if test="pojo.loadWeight!=null"> `loadWeight`,</if>
           <!-- <if test="pojo.feeWeight!=null and pojo.feeWeight!='' "> `feeWeight`,</if>-->
            <if test="pojo.levelAWeight!=null"> `levelAWeight`,</if>
            <if test="pojo.levelBWeight!=null"> `levelBWeight`,</if>
            <if test="pojo.levelCWeight!=null"> `levelCWeight`,</if>
            <if test="pojo.buildDate!=null and pojo.buildDate!='' " > `buildDate`,</if>
            <if test="pojo.customerId!=null"> `customerId`,</if>
            <if test="pojo.checkRegisterNo!=null"> `checkRegisterNo`,</if>
           <!-- <if test="pojo.checkNo!=null"> `checkNo`,</if>-->
            <if test="pojo.shipID!=null"> `shipID`,</if>
            <if test="pojo.sailingArea!=null"> `sailingArea`,</if>
            <if test="pojo.sailingAreaA!=null"> `sailingAreaA`,</if>
            <if test="pojo.sailingAreaB!=null"> `sailingAreaB`,</if>
            <if test="pojo.sailingAreaC!=null"> `sailingAreaC`,</if>
            <if test="pojo.firstRegisterNo!=null"> `firstRegisterNo`,</if>
            <!--<if test="pojo.sailingDepth!=null"> `sailingDepth`,</if>-->
            <if test="pojo.buildFactory!=null"> `buildFactory`,</if>
            <if test="pojo.aisID!=null"> `aisID`,</if>
            <if test="pojo.gpsDeviceId!=null"> `gpsDeviceId`,</if>
            <if test="pojo.oldShipName!=null"> `oldShipName`,</if>
            <if test="pojo.runType!=null"> `runType`,</if>
            <if test="pojo.rebuildDate!=null and pojo.rebuildDate != '' "> `rebuildDate`,</if>
            <!--<if test="pojo.insuranceDate!=null"> `insuranceDate`,</if>-->
            <if test="pojo.checkDate!=null and pojo.checkDate != ''"> `checkDate`,</if>
            <if test="pojo.repairDate!=null and pojo.repairDate != ''"> `repairDate`,</if>
            <if test="pojo.description!=null"> `description`,</if>
            <if test="pojo.name!=null"> `name`,</if>
            <if test="pojo.mobile!=null"> `mobile`,</if>
            <if test="pojo.preLoad!=null"> `preLoad`,</if>
            <if test="pojo.identity!=null"> `identity`,</if>
            <if test="pojo.bankCardNo!=null"> `bankCardNo`,</if>
            <if test="pojo.bankName!=null"> `bankName`,</if>
            <if test="pojo.idPhoto!=null"> `idPhoto`,</if>
            <if test="pojo.idPhotoF!=null"> `idPhotoF`,</if>
            <if test="pojo.bankCardPhoto!=null"> `bankCardPhoto`,</if>
            <if test="pojo.shipPhoto!=null"> `shipPhoto`,</if>
            <if test="pojo.from!=null"> `from`,</if>
            <if test="pojo.status!=null and pojo.status!=''"> `status`,</if>
            <if test="pojo.fitStatus!=null"> `fitStatus`,</if>
            <if test="pojo.noFitCause!=null"> `noFitCause`,</if>
            <if test="pojo.creator!=null"> `creator`,</if>
            <if test="pojo.updater!=null"> `updater`,</if>
            `created`,
            `updated`
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.shipNo!=null">#{pojo.shipNo},</if>
            <if test="pojo.shipFlag!=null">#{pojo.shipFlag},</if>
            <if test="pojo.shipType!=null">#{pojo.shipType},</if>
            <if test="pojo.shipLevel!=null">#{pojo.shipLevel},</if>
            <if test="pojo.length!=null">#{pojo.length},</if>
            <if test="pojo.width!=null">#{pojo.width},</if>
            <if test="pojo.depth!=null">#{pojo.depth},</if>
            <if test="pojo.totalWeight!=null">#{pojo.totalWeight},</if>
            <if test="pojo.netWeight!=null">#{pojo.netWeight},</if>
            <if test="pojo.loadWeight!=null">#{pojo.loadWeight},</if>
            <!--<if test="pojo.feeWeight!=null and pojo.feeWeight!= '' ">#{pojo.feeWeight},</if>-->
            <if test="pojo.levelAWeight!=null">#{pojo.levelAWeight},</if>
            <if test="pojo.levelBWeight!=null">#{pojo.levelBWeight},</if>
            <if test="pojo.levelCWeight!=null">#{pojo.levelCWeight},</if>
            <if test="pojo.buildDate!=null and pojo.buildDate!=''">#{pojo.buildDate},</if>
            <if test="pojo.customerId!=null">#{pojo.customerId},</if>
            <if test="pojo.checkRegisterNo!=null">#{pojo.checkRegisterNo},</if>
           <!-- <if test="pojo.checkNo!=null">#{pojo.checkNo},</if>-->
            <if test="pojo.shipID!=null">#{pojo.shipID},</if>
            <if test="pojo.sailingArea!=null">#{pojo.sailingArea},</if>
            <if test="pojo.sailingAreaA!=null">#{pojo.sailingAreaA},</if>
            <if test="pojo.sailingAreaB!=null">#{pojo.sailingAreaB},</if>
            <if test="pojo.sailingAreaC!=null">#{pojo.sailingAreaC},</if>
            <if test="pojo.firstRegisterNo!=null">#{pojo.firstRegisterNo},</if>
            <!--<if test="pojo.sailingDepth!=null">#{pojo.sailingDepth},</if>-->
            <if test="pojo.buildFactory!=null">#{pojo.buildFactory},</if>
            <if test="pojo.aisID!=null">#{pojo.aisID},</if>
            <if test="pojo.gpsDeviceId!=null">#{pojo.gpsDeviceId},</if>
            <if test="pojo.oldShipName!=null">#{pojo.oldShipName},</if>
            <if test="pojo.runType!=null">#{pojo.runType},</if>
            <if test="pojo.rebuildDate!=null and pojo.rebuildDate != ''">#{pojo.rebuildDate},</if>
            <!--<if test="pojo.insuranceDate!=null">#{pojo.insuranceDate},</if>-->
            <if test="pojo.checkDate!=null and pojo.checkDate != ''" >#{pojo.checkDate},</if>
            <if test="pojo.repairDate!=null and pojo.repairDate != ''">#{pojo.repairDate},</if>
            <if test="pojo.description!=null">#{pojo.description},</if>
            <if test="pojo.name!=null">#{pojo.name},</if>
            <if test="pojo.mobile!=null">#{pojo.mobile},</if>
            <if test="pojo.preLoad!=null">#{pojo.preLoad},</if>
            <if test="pojo.identity!=null">#{pojo.identity},</if>
            <if test="pojo.bankCardNo!=null">#{pojo.bankCardNo},</if>
            <if test="pojo.bankName!=null">#{pojo.bankName},</if>
            <if test="pojo.idPhoto!=null">#{pojo.idPhoto},</if>
            <if test="pojo.idPhotoF!=null">#{pojo.idPhotoF},</if>
            <if test="pojo.bankCardPhoto!=null">#{pojo.bankCardPhoto},</if>
            <if test="pojo.shipPhoto!=null">#{pojo.shipPhoto},</if>
            <if test="pojo.from!=null">#{pojo.from},</if>
            <if test="pojo.status!=null and pojo.status!=''">#{pojo.status},</if>
            <if test="pojo.fitStatus!=null">#{pojo.fitStatus},</if>
            <if test="pojo.noFitCause!=null">#{pojo.noFitCause},</if>
            <if test="pojo.creator!=null">#{pojo.creator},</if>
            <if test="pojo.updater!=null">#{pojo.updater},</if>
            UNIX_TIMESTAMP(now()),
            UNIX_TIMESTAMP(now())
        </trim>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE Ship
        <set>
            <if test="pojo.shipNo!=null"> `shipNo` = #{pojo.shipNo},</if>
            <if test="pojo.shipFlag!=null"> `shipFlag`= #{pojo.shipFlag},</if>
            <if test="pojo.shipType!=null"> `shipType`= #{pojo.shipType},</if>
            <if test="pojo.shipLevel!=null"> `shipLevel`= #{pojo.shipLevel},</if>
            <if test="pojo.length!=null"> `length`= #{pojo.length},</if>
            <if test="pojo.width!=null"> `width`= #{pojo.width},</if>
            <if test="pojo.depth!=null"> `depth`= #{pojo.depth},</if>
            <if test="pojo.totalWeight!=null"> `totalWeight`= #{pojo.totalWeight},</if>
            <if test="pojo.netWeight!=null"> `netWeight`= #{pojo.netWeight},</if>
            <if test="pojo.loadWeight!=null"> `loadWeight`= #{pojo.loadWeight},</if>
            <!--<if test="pojo.feeWeight!=null and pojo.feeWeight!= ''"> `feeWeight`= #{pojo.feeWeight},</if>-->
            <if test="pojo.levelAWeight!=null"> `levelAWeight`= #{pojo.levelAWeight},</if>
            <if test="pojo.levelBWeight!=null"> `levelBWeight`= #{pojo.levelBWeight},</if>
            <if test="pojo.levelCWeight!=null"> `levelCWeight`= #{pojo.levelCWeight},</if>
            <if test="pojo.buildDate!=null"> `buildDate`= #{pojo.buildDate},</if>
            <if test="pojo.customerId!=null"> `customerId`= #{pojo.customerId},</if>
            <if test="pojo.checkRegisterNo!=null"> `checkRegisterNo`= #{pojo.checkRegisterNo},</if>
           <!-- <if test="pojo.checkNo!=null"> `checkNo`= #{pojo.checkNo},</if>-->
            <if test="pojo.shipID!=null"> `shipID`= #{pojo.shipID},</if>
            <if test="pojo.sailingArea!=null"> `sailingArea`= #{pojo.sailingArea},</if>
            <if test="pojo.sailingAreaA!=null"> `sailingAreaA`= #{pojo.sailingAreaA},</if>
            <if test="pojo.sailingAreaB!=null"> `sailingAreaB`= #{pojo.sailingAreaB},</if>
            <if test="pojo.sailingAreaC!=null"> `sailingAreaC`= #{pojo.sailingAreaC},</if>
            <if test="pojo.firstRegisterNo!=null"> `firstRegisterNo`= #{pojo.firstRegisterNo},</if>
            <!--<if test="pojo.sailingDepth!=null"> `sailingDepth`= #{pojo.sailingDepth},</if>-->
            <if test="pojo.buildFactory!=null"> `buildFactory`= #{pojo.buildFactory},</if>
            <if test="pojo.aisID!=null"> `aisID`= #{pojo.aisID},</if>
            <if test="pojo.gpsDeviceId!=null"> `gpsDeviceId`= #{pojo.gpsDeviceId},</if>
            <if test="pojo.oldShipName!=null"> `oldShipName`= #{pojo.oldShipName},</if>
            <if test="pojo.runType!=null"> `runType`= #{pojo.runType},</if>
            <if test="pojo.rebuildDate!=null and pojo.rebuildDate!= '' "> `rebuildDate`= #{pojo.rebuildDate},</if>
            <!--<if test="pojo.insuranceDate!=null"> `insuranceDate`= #{pojo.insuranceDate},</if>-->
            <if test="pojo.checkDate!=null and pojo.checkDate != ''"> `checkDate`= #{pojo.checkDate},</if>
            <if test="pojo.repairDate!=null and pojo.repairDate != ''"> `repairDate`= #{pojo.repairDate},</if>
            <if test="pojo.description!=null"> `description`= #{pojo.description},</if>
            <if test="pojo.name!=null"> `name`= #{pojo.name},</if>
            <if test="pojo.mobile!=null"> `mobile`= #{pojo.mobile},</if>
            <if test="pojo.preLoad!=null"> `preLoad`= #{pojo.preLoad},</if>
            <if test="pojo.identity!=null"> `identity`= #{pojo.identity},</if>
            <if test="pojo.bankCardNo!=null"> `bankCardNo`= #{pojo.bankCardNo},</if>
            <if test="pojo.bankName!=null"> `bankName`= #{pojo.bankName},</if>
            <if test="pojo.idPhoto!=null"> `idPhoto`= #{pojo.idPhoto},</if>
            <if test="pojo.idPhotoF!=null"> `idPhotoF`= #{pojo.idPhotoF},</if>
            <if test="pojo.bankCardPhoto!=null"> `bankCardPhoto`= #{pojo.bankCardPhoto},</if>
            <if test="pojo.shipPhoto!=null"> `shipPhoto`= #{pojo.shipPhoto},</if>
            <if test="pojo.from!=null"> `from`= #{pojo.from},</if>
            <if test="pojo.status!=null and pojo.status!=''"> `status`= #{pojo.status},</if>
            <if test="pojo.fitStatus!=null"> `fitStatus`= #{pojo.fitStatus},</if>
            <if test="pojo.noFitCause!=null"> `noFitCause`= #{pojo.noFitCause},</if>
            <if test="pojo.updater!=null">`updater` = #{pojo.updater},</if>
            `updated` = UNIX_TIMESTAMP(now())
        </set>
        WHERE `id` = #{pojo.id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <update id="del" parameterType="java.lang.Long">
        UPDATE Ship
        SET `isDeleted` = 1 ,
        `updated` = UNIX_TIMESTAMP(now())
        WHERE `id` = #{id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="AllColumnMap">
        SELECT <include refid="all_column_user"/>
        FROM `Ship` a  LEFT JOIN `UserProfile` b on a.creator = b.id
        WHERE a.`id` = #{id} and a.`isDeleted` = 0
        LIMIT 1
    </select>

    <select id="getExistCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `Ship`
        where `isDeleted` = 0
        <if test="pojo.id != null"> AND `id` != #{pojo.id} </if>
        <if test="pojo.shipNo != null"> AND `shipNo` = #{pojo.shipNo} </if>
        limit 1
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(a.id)
        FROM  `Ship` a  LEFT JOIN `UserProfile` b on a.creator = b.id
        <include refid="pageQueryWhereCommon"/>
        limit 1
    </select>

    <select id="queryByPage" resultMap="AllColumnMap" parameterType="Map">
        select <include refid="all_column_user"/>
        from `Ship` a LEFT JOIN `UserProfile` b on a.creator = b.id
        <include refid="pageQueryWhereCommon"/>
        order by a.`created` desc
        <include refid="pageCommon"/>
    </select>

    <select id="queryWithStaffCount" resultType="java.lang.Integer" parameterType="Map" >
        select count(1)
        <include refid="queryWithStaffWhereCommon"/>
    </select>

    <select id="queryWithStaffList" resultMap="ShipWithStaffColumnMap" parameterType="Map">
        select <include refid="all_column_staff"/>
        <include refid="queryWithStaffWhereCommon"/>
        order by a.`shipFlag`
        <include refid="pageCommon"/>
    </select>

    <select id="queryReportSixCount" resultType="java.lang.Integer" parameterType="Map" >
        select count(1)
        <include refid="queryReportSixCommon"/>
    </select>

    <select id="queryReportSixList"  resultType="Map" parameterType="Map">
        select a.loadTime, ( select shipNo from Ship b where b.id = a.shipId ) as shipNo,
        t.goodsName,t.sender,t.name,t.receiver,t.preWeight,a.loadWeight,a.dischargeWeight,
        a.poundBalance,a.poundBalance/a.loadWeight,a.poundBalance- a.loadWeight*0.995,
        (SELECT p.name from Port p where p.id = t.startPortId) as portName,
        case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end as kpdj,
        a.bucklePrice,
        (t.oil*( select so.unitPrice from ShipOil so where so.shipId = a.shipId and so.status='2') ) as shipOil,
        ((a.loadWeight/a.dischargeWeight)*(case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end)) as kpje,
        case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end as cydj,
        ((a.loadWeight/a.dischargeWeight)*(case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end)) -a.bucklePrice -(t.oil*( select so.unitPrice from ShipOil so where so.shipId = a.shipId and so.status='2') ) as cyje

        <include refid="queryReportSixCommon"/>
        order by a.created DESC
        <include refid="pageCommon"/>
    </select>

    <sql id="queryReportSixCommon">
        from
        SailingInfo a  LEFT JOIN ( select d.oil, d.id,b.goodsName,b.sender,c.name,b.receiver,d.preWeight,b.startPortId,d.actualTransferPrice as deposit,e.unitPrice
        from Contract c LEFT JOIN ContractFlow e on e.contractId = c.id
        LEFT JOIN CustomerTaskFlow b on b.taskId = e.id  LEFT JOIN DispatchInfo d ON d.customerTaskFlowId = b.id ) t
        ON a.orderId = t.id
        where a.isDeleted = '0' and a.status = '5'
        <if test="pojo.key != null and pojo.key != ''">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>
        <if test="pojo.startTime != null and pojo.startTime != ''">
            and  FROM_UNIXTIME( a.dischargeTime, '%Y-%m' ) &gt;= #{pojo.startTime}
        </if>
        <if test="pojo.endTime != null and pojo.endTime != ''">
            and  FROM_UNIXTIME( a.dischargeTime, '%Y-%m' ) &lt;= #{pojo.endTime}
        </if>
        <!-- <if test="pojo.key != null and pojo.key != ''">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>-->
    </sql>

     <select id="queryReportOneCount" resultType="java.lang.Integer" parameterType="Map" >
        select count(1)
        <include refid="queryReportOneCommon"/>
    </select>

    <select id="queryReportOneList"  resultType="Map" parameterType="Map">
        select a.loadTime, ( select shipNo from Ship b where b.id = a.shipId ) as shipNo,
        t.goodsName,t.sender,t.name,t.receiver,t.preWeight,a.loadWeight,a.dischargeWeight,
        a.poundBalance,IFNULL(a.poundBalance/a.loadWeight,0) hs ,a.poundBalance- a.loadWeight*0.995 cchs,
        (SELECT p.name from Port p where p.id = t.startPortId) as portName,
        case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end as kpdj,
        (select p.planRefueling from PlanRefueling p where p.shipId = a.shipId and p.disId = a.orderId) as kcy ,
        a.bucklePrice,
         (t.oil*( select so.unitPrice from ShipOil so where so.shipId = a.shipId and so.status='2') ) as shipOil,
        FORMAT(((a.loadWeight/a.dischargeWeight)*(case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end)),2) as kpje,
        case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end as cydj,
        FORMAT((((a.loadWeight/a.dischargeWeight)*(case when t.unitPrice is not null then t.unitPrice ELSE t.deposit end))-IFNULL(a.bucklePrice,0)-IFNULL((t.oil*( select so.unitPrice from ShipOil so where so.shipId = a.shipId and so.status='2') ),0) ), 2 ) as cyje

        <include refid="queryReportOneCommon"/>
         order by a.created DESC
        <include refid="pageCommon"/>
    </select>

    <sql id="queryReportOneCommon">
        from
        SailingInfo a  LEFT JOIN ( select d.oil, d.id,b.goodsName,b.sender,c.name,b.receiver,d.preWeight,b.startPortId,d.actualTransferPrice as deposit,e.unitPrice
        from Contract c LEFT JOIN ContractFlow e on e.contractId = c.id
        LEFT JOIN CustomerTaskFlow b on b.taskId = e.id  LEFT JOIN DispatchInfo d ON d.customerTaskFlowId = b.id ) t
        ON a.orderId = t.id
        where a.isDeleted = '0' and a.status = '5'
        <if test="pojo.key != null and pojo.key != ''">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>
        <if test="pojo.startTime != null and pojo.startTime != ''">
            and  FROM_UNIXTIME( a.dischargeTime, '%Y-%m' ) &gt;= #{pojo.startTime}
        </if>
        <if test="pojo.endTime != null and pojo.endTime != ''">
            and  FROM_UNIXTIME( a.dischargeTime, '%Y-%m' ) &lt;= #{pojo.endTime}
        </if>
        <!-- <if test="pojo.key != null and pojo.key != ''">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>-->
    </sql>

    <select id="queryReportFiveCount" resultType="java.lang.Integer" parameterType="Map" >
        select count(1)
        <include refid="queryReportFiveCommon"/>
    </select>

    <select id="queryReportFiveList"  resultType="Map" parameterType="Map">
        select a.shipId,b.shipNo,a.preWeight,b.mobile,a.preArriveTime ,
        (SELECT CASE when c.selfBuckle ='1' then '是' else '否' end
        from CustomerTaskFlow c  where  a.customerTaskFlowId = c.id) as selfBuckle
        <include refid="queryReportFiveCommon"/>
        order by a.created DESC
        <include refid="pageCommon"/>

    </select>

    <select id="getReportTwoHeader"  resultType="Map" parameterType="Map">
        select ta.shipNo ,GROUP_CONCAT(ta.sj) as  sj,
        GROUP_CONCAT(ta.receiver) as receiver,GROUP_CONCAT(ta.sender) as sender,GROUP_CONCAT(ta.goodsType) as lx from  (
        select b.shipNo,date_format(FROM_UNIXTIME(a.loadTime),'%Y-%m-%d') as sj
        ,d.receiver,d.sender,d.goodsType from SailingInfo a, Ship b,DispatchInfo c,CustomerTaskFlow d where
        a.shipId = b.id and a.orderId = c.id and c.customerTaskFlowId =d.id
        and b.shipFlag = 1 and a.isDeleted = '0'
        <if test="pojo.key != null and pojo.key != ''">
            and FROM_UNIXTIME( a.actualArriveEPortTime, '%Y-%m' )  = #{pojo.key}
        </if>
        <if test="pojo.name != null">
            AND  (b.`shipNo` like concat('%', #{pojo.name}, '%') )
        </if>
        ORDER BY a.shipId
        ) ta GROUP BY ta.shipNo order by count(ta.shipNo) desc  LIMIT 1
    </select>

    <select id="getReportTwoList"  resultType="Map" parameterType="Map">
        select ta.shipNo ,GROUP_CONCAT(ta.sj) as  sj,
        GROUP_CONCAT(ta.receiver) as receiver,GROUP_CONCAT(ta.sender) as sender,GROUP_CONCAT(ta.goodsType) as lx from  (
        select b.shipNo,date_format(FROM_UNIXTIME(a.loadTime),'%d') as sj
        ,d.receiver,d.sender,d.goodsType from SailingInfo a, Ship b,DispatchInfo c,CustomerTaskFlow d where
        a.shipId = b.id and a.orderId = c.id and c.customerTaskFlowId =d.id
        <if test="pojo.key != null and pojo.key != ''">
            and FROM_UNIXTIME( a.actualArriveEPortTime, '%Y-%m' )  = #{pojo.key}
        </if>
        <if test="pojo.name != null">
            AND  (b.`shipNo` like concat('%', #{pojo.name}, '%') )
        </if>
        and b.shipFlag = 1 and a.isDeleted = '0' ORDER BY a.shipId
        ) ta GROUP BY ta.shipNo order by count(ta.shipNo) desc
    </select>

    <sql id="queryReportFiveCommon">
        from DispatchInfo a LEFT JOIN Ship b
        on  a.shipId = b.id  where a.isDeleted ='0'
        <if test="pojo.key != null and pojo.key != ''">
            AND (b.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>
        <!-- <if test="pojo.shipFlags != null">
             AND `shipFlag` in
             <foreach collection="pojo.shipFlags" open="(" close=")" item="shipFlag" separator=",">
                 #{shipFlag}
             </foreach>
         </if>
         <if test="pojo.customerTaskFlowId != null">
             AND a.`id` not in (select shipId from `DispatchInfo` c where c.isDeleted = 0 and c.`customerTaskFlowId` = #{pojo.customerTaskFlowId})
             and a.sailingArea &amp; (select sailingArea from CustomerTaskFlow where id = #{pojo.customerTaskFlowId}) > 0
         </if>-->
    </sql>
    <select id="queryReportThreeList"  resultType="Map" >
        SELECT  (select sp.shipNo from Ship sp where sp.id = a.shipId) as shipId,CASE a.eventId WHEN 1 THEN '不接电话'  WHEN 2 THEN '停船过夜'  WHEN 3 THEN '不服调配'  WHEN 4 THEN '修船'  WHEN 5 THEN '保养'  WHEN 6 THEN '事故停航'  WHEN 7 THEN '私事停航'  WHEN 8 THEN '春节放假'  WHEN 9 THEN '装卸货异常情况'  ELSE '' END as eventId
        , CASE IFNULL(c.sl,0) WHEN 0 THEN '-' ELSE c.sl END  as sl,a.zs ,b.bz FROM ((
        SELECT s.shipId, t.eventId, count(s.shipId) AS zs FROM (
        SELECT 1 AS eventId FROM DUAL
        UNION ALL
        SELECT 2 AS eventId FROM DUAL
        UNION ALL
        SELECT 3 AS eventId FROM DUAL
        UNION ALL
        SELECT 4 AS eventId FROM DUAL
        UNION ALL
        SELECT 5 AS eventId FROM DUAL
        UNION ALL
        SELECT 6 AS eventId FROM DUAL
        UNION ALL
        SELECT 7 AS eventId FROM DUAL
        UNION ALL
        SELECT 8 AS eventId FROM DUAL
        UNION ALL
        SELECT 9 AS eventId FROM DUAL ) t,
        ShipEvent s
        WHERE 1=1 and s.isDeleted = 0

            and s.beginDate &gt;= str_to_date(#{0}, '%Y-%m-%d')
            and s.endDate &lt; date_add( str_to_date(#{1}, '%Y-%m-%d'), interval 1 month )

        group by s.shipId, t.eventId ORDER BY s.shipId, t.eventId ) a LEFT JOIN
        (select shipId,eventId,count(1) as sl from ShipEvent  where 1=1 and isDeleted = 0

            and beginDate &gt;= str_to_date(#{2}, '%Y-%m-%d')
            and endDate &lt; date_add( str_to_date(#{3}, '%Y-%m-%d'), interval 1 month )

        GROUP BY shipId,eventId ORDER BY shipId,eventId) c ON  (a.shipId = c.shipId) and a.eventId = c.eventId ) LEFT JOIN
        (select shipId, GROUP_CONCAT(description) AS bz from ShipEvent where isDeleted = 0 group by shipId )b on a.shipId = b.shipId
        order by  a.shipId ,a.eventId
    </select>

    <select id="getFlowByContractId"  resultType="Map" >
        select f.id as id ,f.name as name from Flow f, ContractFlow c where c.contractId = #{0} and c.flowId = f.id
    </select>

    <select id="getReportFour2ThreeList"  resultType="Map" >
        select '集装箱' as lx,
        case when  ta.jhsl is null then '-' else  ta.jhsl end  as jhsl,
        case when tb.sjsl is null then '-' else tb.sjsl end as sjsl,
        case when ta.jhsl is null or tb.sjsl is null then '-' else FORMAT(tb.sjsl /ta.jhsl,2) end  as wcl
         from (select sum(plan) as jhsl, '3' as lx  from FreightPlan  where time = #{0} and shipFlag ='3' and isDeleted = '0'  ) ta ,
        (select  sum(dischargeWeight) as sjsl ,'3' as lx from CustomerTaskFlow a , DispatchInfo b , SailingInfo c
        where b.customerTaskFlowId = a.id and c.orderId = b.id  and a.goodsType = '3' and c.isDeleted = '0'
        and FROM_UNIXTIME( c.dischargeTime, '%Y-%m' ) =  #{1} ) tb where ta.lx = tb.lx
    </select>

    <select id="getReportFour2TwoList"  resultType="Map" >

        select  CASE tt.lx WHEN 1 THEN '碎石'  WHEN 2 THEN '市场煤炭'  WHEN 3 THEN '华能电煤'  WHEN 4 THEN '浙能电煤'  WHEN 5 THEN '铜精矿'  WHEN 6 THEN 'PAT'  WHEN 7 THEN '经营业务'  WHEN 8 THEN '其他业务'   ELSE '' END   as lx ,
        case when tb.jhsl is null then '-' else tb.jhsl end  as jhsl,
        case when tt.sjsl is null then '-' else tt.sjsl end as sjsl,
        case when tb.jhsl is null or tt.sjsl is null then '-' else FORMAT(tt.sjsl /tb.jhsl,2) end  as wcl
            from (  select t.lx, ta.sjsl from (SELECT 1 AS lx FROM DUAL
            UNION ALL
            SELECT 2 AS lx FROM DUAL
            UNION ALL
            SELECT 3 AS lx FROM DUAL
            UNION ALL
            SELECT 4 AS lx FROM DUAL
            UNION ALL
            SELECT 5 AS lx FROM DUAL
            UNION ALL
            SELECT 6 AS lx FROM DUAL
            UNION ALL
            SELECT 7 AS lx FROM DUAL
            UNION ALL
            SELECT 8 AS lx FROM DUAL ) t LEFT JOIN (select  sum(dischargeWeight) as sjsl ,a.goodsSubType as lx from CustomerTaskFlow a , DispatchInfo b , SailingInfo c
            where b.customerTaskFlowId = a.id and c.orderId = b.id  and a.goodsType = '2' and c.isDeleted = '0'
            and FROM_UNIXTIME( c.dischargeTime, '%Y-%m' ) =  #{0}  group by a.goodsSubType) ta on t.lx = ta.lx  ) tt LEFT JOIN
            (select sum(plan) as jhsl, goodsName lx  from FreightPlan  where time = #{1} and shipFlag ='2' and isDeleted = '0'  group by goodsName) tb on tt.lx = tb.lx  order by tt.lx
    </select>

    <select id="getReportFour2OneList"  resultType="Map" >
        select tb.lx as lx  ,
        case when tb.jhsl is null then '-' else tb.jhsl end as jhsl,
        case when tb.sjsl is null then '-' else tb.sjsl end as sjsl,
        case when tb.jhsl is null or tb.sjsl is null then '-' else FORMAT(tb.sjsl/tb.jhsl ,2) end  as wcl
            from (
            select a.lx ,b.jhsl ,a.sjsl from  ( select  sum(dischargeWeight) as sjsl ,a.receiver as lx from CustomerTaskFlow a , DispatchInfo b , SailingInfo c
            where b.customerTaskFlowId = a.id and c.orderId = b.id  and a.goodsType = '1' and c.isDeleted = '0'
            and FROM_UNIXTIME( c.dischargeTime, '%Y-%m' ) =  #{0}  group by a.receiver ) a left join
            (select sum(plan) as jhsl, revUnit lx  from FreightPlan  where time = #{1} and shipFlag ='1' and isDeleted = '0'  group by revUnit ) b on a.lx = b.lx
            UNION
            select b.lx ,b.jhsl ,a.sjsl from  ( select  sum(dischargeWeight) as sjsl ,a.receiver as lx from CustomerTaskFlow a , DispatchInfo b , SailingInfo c
            where b.customerTaskFlowId = a.id and c.orderId = b.id  and a.goodsType = '1' and c.isDeleted = '0'
            and FROM_UNIXTIME( c.dischargeTime, '%Y-%m' ) =  #{2}  group by a.receiver ) a right join
            (select sum(plan) as jhsl, revUnit lx  from FreightPlan  where time = #{3} and shipFlag ='1' and isDeleted = '0'  group by revUnit ) b on a.lx = b.lx
            ) tb
    </select>

    <select id="getReportFour2FourList"  resultType="Map" >
        select
        CASE tt.lx WHEN 1 THEN '650吨以上'  WHEN 2 THEN '650吨以下'  WHEN 3 THEN '碎石船'  WHEN 4 THEN '兴能散装船'  WHEN 5 THEN '兴能集装箱船'  WHEN 6 THEN '兴一航运散装船'  WHEN 7 THEN '兴一航运集装箱船'   END   as lx ,
        case when tb.jhsl is null then '-' else tb.jhsl end  as jhsl,
        case when tt.sjsl is null then '-' else tt.sjsl end as sjsl,
        case when tb.jhsl is null or tt.sjsl is null then '-' else FORMAT(tt.sjsl/tb.jhsl ,2) end  as wcl
        from (  select t.lx, ta.sjsl from (SELECT 1 AS lx FROM DUAL
        UNION ALL
        SELECT 2 AS lx FROM DUAL
        UNION ALL
        SELECT 3 AS lx FROM DUAL
        UNION ALL
        SELECT 4 AS lx FROM DUAL
        UNION ALL
        SELECT 5 AS lx FROM DUAL
        UNION ALL
        SELECT 6 AS lx FROM DUAL
        UNION ALL
        SELECT 7 AS lx FROM DUAL ) t LEFT JOIN
        (select  sum(dischargeWeight) as sjsl ,b.shipLevel as lx from  SailingInfo a ,Ship b
        where a.shipId = b.id  and a.isDeleted = '0'
        and FROM_UNIXTIME( a.dischargeTime, '%Y-%m' ) =  #{0}  group by  b.shipLevel ) ta on t.lx = ta.lx  ) tt LEFT JOIN
        (select sum(plan) as jhsl, shipClass lx  from ShippingPlan  where time = #{1} and isDeleted = '0' group by shipClass) tb on tt.lx = tb.lx  order by tt.lx
    </select>

    <sql id="pageQueryWhereCommon">
        where a.`isDeleted` = 0 and a.`shipFlag` &lt; 3
        <if test="pojo.id != null"> AND a.`id` = #{pojo.id} </if>
        <if test="pojo.key != null">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>
        <if test="pojo.fitStatus != null and pojo.fitStatus != ''"> AND a.`fitStatus` = #{pojo.fitStatus} </if>
    </sql>

    <sql id="queryWithStaffWhereCommon">
        from `Ship` a
        left join `ShipStaff` b on b.shipId = a.id and b.isDeleted = 0 and b.isOwner = 1 and a.runType!=2
        where a.isDeleted = 0
        <if test="pojo.key != null and pojo.key != ''">
            AND (a.`shipNo` like concat('%', #{pojo.key}, '%') )
        </if>
        <if test="pojo.shipFlags != null">
            AND `shipFlag` in
            <foreach collection="pojo.shipFlags" open="(" close=")" item="shipFlag" separator=",">
                #{shipFlag}
            </foreach>
        </if>
        <if test="pojo.customerTaskFlowId != null">
            AND a.`id` not in (select shipId from `DispatchInfo` c where c.isDeleted = 0 and c.`customerTaskFlowId` = #{pojo.customerTaskFlowId})
            and a.sailingArea &amp; (select sailingArea from CustomerTaskFlow where id = #{pojo.customerTaskFlowId}) > 0
        </if>
    </sql>
    <sql id="pageCommon">
        <choose>
            <when test="pojo.startRow != null and pojo.startRow gt -1 and pojo.limitNum != null and pojo.limitNum gt 0">
                limit #{pojo.startRow}, #{pojo.limitNum}
            </when>
            <otherwise>
                limit 100
            </otherwise>
        </choose>
    </sql>


    <select  id="getAppById" parameterType="java.lang.Long" resultMap="mRetShipMap">

        SELECT A1.shipNo, A1.`name`, A1.mobile, A1.identity, A1.bankCardNo,
        A1.bankName, A1.idPhoto, A1.idPhotoF, A1.bankCardPhoto, A1.shipPhoto, A1.preLoad
        FROM Ship A1
        INNER JOIN AppUser A2 ON A1.id=A2.shipInfoId
        WHERE A2.id = #{id}
    </select>

    <select  id="getShipInfo" parameterType="java.lang.Long" resultMap="mRetShipMap">

        SELECT A1.`id` , A1.shipNo
        FROM Ship A1
        INNER JOIN UserProfile A2 ON A1.mobile=A2.mobile
        WHERE A2.id = #{id}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!--  Generate by autoSQLMap Powered by duxing@Taobao -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingyi.logistic.business.db.dao.DangerZoneDAO">
    <resultMap id="AllColumnMap" type="com.xingyi.logistic.business.db.entity.DangerZoneDO">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="radius" column="radius"/>
        <result property="alarmDistance" column="alarmDistance"/>
        <result property="status" column="status"/>
        <result property="msgTemplate" column="msgTemplate"/>
        <result property="description" column="description"/>
        <result property="creator" column="creator"/>
        <result property="created" column="created"/>
        <result property="updater" column="updater"/>
        <result property="updated" column="updated"/>
        <result property="creatorName" column="creatorName"/>
        <result property="updaterName" column="updaterName"/>
    </resultMap>

    <sql id="all_column">
        a.`id`
        ,a.`name`
        ,a.`longitude`
        ,a.`latitude`
        ,a.`radius`
        ,a.`alarmDistance`
        ,a.`status`
        ,a.`description`
        ,a.msgTemplate
        ,a.`creator`
        ,a.`created`
        ,a.`updater`
        ,a.`updated`
    </sql>

    <sql id="all_column_user">
        <include refid="all_column"/>
        ,b.`realName` as creatorName
    </sql>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO DangerZone
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.name!=null"> `name`,</if>
            <if test="pojo.longitude!=null"> `longitude`,</if>
            <if test="pojo.latitude!=null"> `latitude`,</if>
            <if test="pojo.radius!=null"> `radius`,</if>
            <if test="pojo.alarmDistance!=null"> `alarmDistance`,</if>
            <if test="pojo.status!=null"> `status`,</if>
            <if test="pojo.msgTemplate!=null"> `msgTemplate`,</if>
            <if test="pojo.description!=null"> `description`,</if>
            <if test="pojo.creator!=null"> `creator`,</if>
            <if test="pojo.updater!=null"> `updater`,</if>
            `created`,
            `updated`
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.name!=null">#{pojo.name},</if>
            <if test="pojo.longitude!=null">#{pojo.longitude},</if>
            <if test="pojo.latitude!=null">#{pojo.latitude},</if>
            <if test="pojo.radius!=null">#{pojo.radius},</if>
            <if test="pojo.alarmDistance!=null">#{pojo.alarmDistance},</if>
            <if test="pojo.status!=null">#{pojo.status},</if>
            <if test="pojo.msgTemplate!=null">#{pojo.msgTemplate},</if>
            <if test="pojo.description!=null">#{pojo.description},</if>
            <if test="pojo.creator!=null">#{pojo.creator},</if>
            <if test="pojo.updater!=null">#{pojo.updater},</if>
            UNIX_TIMESTAMP(now()),
            UNIX_TIMESTAMP(now())
        </trim>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE DangerZone
        <set>
            <if test="pojo.name!=null">`name` = #{pojo.name},</if>
            <if test="pojo.longitude!=null">`longitude` = #{pojo.longitude},</if>
            <if test="pojo.latitude!=null">`latitude` = #{pojo.latitude},</if>
            <if test="pojo.radius!=null">`radius` = #{pojo.radius},</if>
            <if test="pojo.alarmDistance!=null">`alarmDistance` = #{pojo.alarmDistance},</if>
            <if test="pojo.status!=null">`status` = #{pojo.status},</if>
            <if test="pojo.msgTemplate!=null">`msgTemplate` = #{pojo.msgTemplate},</if>
            <if test="pojo.description!=null">`description` = #{pojo.description},</if>
            <if test="pojo.updater!=null">`updater` = #{pojo.updater},</if>
            `updated` = UNIX_TIMESTAMP(now())
        </set>
        WHERE `id` = #{pojo.id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <update id="del" parameterType="java.lang.Long">
        UPDATE DangerZone
        SET `isDeleted` = 1 ,
        `updated` = UNIX_TIMESTAMP(now())
        WHERE `id` = #{id} and `isDeleted` = 0
        LIMIT 1
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="AllColumnMap">
        SELECT <include refid="all_column_user"/>
        FROM `DangerZone` a LEFT JOIN `UserProfile` b on a.creator = b.id
        WHERE a.`id` = #{id} and a.`isDeleted` = 0
        LIMIT 1
    </select>

    <select id="getExistCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(id)
        FROM  `DangerZone`
        where `isDeleted` = 0
        <if test="pojo.id != null"> AND `id` != #{pojo.id} </if>
        <if test="pojo.name != null"> AND `name` = #{pojo.name} </if>
        limit 1
    </select>

    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
        SELECT  count(a.id)
        FROM  `DangerZone` a LEFT JOIN `UserProfile` b on a.creator = b.id
        <include refid="pageQueryWhereCommon"/>
        limit 1
    </select>

    <select id="queryByPage" resultMap="AllColumnMap" parameterType="Map">
        select <include refid="all_column_user"/>
        from `DangerZone` a LEFT JOIN `UserProfile` b on a.creator = b.id
        <include refid="pageQueryWhereCommon"/>
        order by a.`created` desc
        <include refid="pageCommon"/>
    </select>

    <sql id="pageQueryWhereCommon">
        where a.`isDeleted` = 0
        <if test="pojo.id != null"> AND a.`id` = #{pojo.id} </if>
        <if test="pojo.key != null">
            AND (a.`name` like concat('%', #{pojo.key}, '%') )
        </if>
    </sql>

    <sql id="pageCommon">
        <choose>
            <when test="pojo.startRow != null and pojo.startRow gt -1 and pojo.limitNum != null and pojo.limitNum gt 0">
                limit #{pojo.startRow}, #{pojo.limitNum}
            </when>
            <otherwise>
                limit 100
            </otherwise>
        </choose>
    </sql>
</mapper>